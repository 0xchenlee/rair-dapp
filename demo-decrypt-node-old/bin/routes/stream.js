const express = require('express')
const jwt = require('express-jwt')

module.exports = context => {
  const router = express.Router()

  const jwtMiddleware = jwt({
    secret: process.env.JWT_SECRET,
    algorithms: ['HS256'],
    getToken: req => {
      if (req.params && req.params.token) {
        return req.params.token
      } else {
        return null
      }
    },
    requestProperty: 'token'
  })

  /**
   * @swagger
   *
   * /stream/{token}/{mediaId}/{fileName}:
   *   post:
   *     description: Register a new piece of media. Optionally provide a decrypt key
   *     produces:
   *       - application/json
   *     parameters:
   *       - in: path
   *         name: token
   *         description: The JSON web token granted by the auth API to access the media given by the mediaId. Must be current and generated by this node.
   *         schema:
   *           type: string
   *         required: true
   *       - in: path
   *         description: RAIR unique identifier for a piece of media.
   *         name: mediaId
   *         schema:
   *           type: string
   *         required: true
   *       - in: path
   *         description: Sub-file of the media. For HLS can be a manifest/playlist file (.m3u8) or a media chunk (.ts) or the rair.json manifest
   *         name: fileName
   *         schema:
   *           type: string
   *         required: true
   *     responses:
   *       200:
   *         description: Returns if added successfully
   */
  router.use('/:token/:mediaId',
    jwtMiddleware,
    context.hls.middleware
  )
  return router
}
